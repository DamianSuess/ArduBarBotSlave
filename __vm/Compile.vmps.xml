<VisualMicro>
  <Program Name="ArduBarBotSlave" Ext=".ino" Location="C:\Users\harou\OneDrive\ExamensArbetet\Arduino\ArduBarBotSlave">
    <Compile IsGdb="0" CompilerErrors="0" ConfigurationName="Debug" UseConfigurationNameInBuildFolder="True" StopOnError="False" OptimiseLibs="True" OptimiseCore="True" IsDebugStart="1" BuildPath="C:\Users\harou\AppData\Local\Temp\VMBuilds\ArduBarBotSlave\mega_atmega2560\Debug" ReCompileIfSourceIsNewer="1" SketchName="ArduBarBotSlave" ReportDigitalPins="0" ReportAnalogPins="0" ReportI2C="0" ReportFreeMemory="0" IncludeDebug="1" LastDebugPreProcessorDefinitions="VM_DEBUG;VM_DEBUG_ENABLE 1;VM_DEBUG_BANDWIDTH_THROTTLE_MS 33;VM_DEBUGGER_TYPE_HARDWARESERIAL 0;VM_DEBUGGER_TYPE_SOFTWARESERIAL 1;VM_DEBUGGER_TYPE_FASTSERIAL 2;VM_DEBUGGER_TYPE_USB 3;VM_DEBUGGER_TYPE_TEENSY 4;VM_DEBUGGER_TYPE_UART 5;VM_DEBUGGER_TYPE_USART 6;VM_DEBUGGER_TYPE_USBSERIAL 7;VM_DEBUGGER_TYPE_TTYUART 8;VM_DEBUGGER_TYPE_NET_CONSOLE 9;VM_DEBUGGER_TYPE_Uart 10;VM_DEBUGGER_TYPE_COSA 11;VM_DEBUGGER_TYPE_CDCSerialClass 12;VM_DEBUGGER_TYPE_HARDWARESERIAL1 13;VM_DEBUGGER_TYPE_HARDWARESERIAL2 14;VM_DEBUGGER_TYPE_HARDWARESERIAL3 15;VM_DEBUGGER_TYPE_NET_UDP 16;VM_DEBUGGER_TYPE_USBAPI 17;VM_DEBUGGER_TYPE VM_DEBUGGER_TYPE_HARDWARESERIAL;VM_DEBUG_BREAKPAUSE;" IncludesDebug="1" IsCompiled="1" />
    <Platform Package="arduino" Name="arduino16x" Platform="avr" Architecture="avr">
      <Board Name="mega_atmega2560" Description="Arduino/Genuino Mega w/ ATmega2560 (Mega 2560)" CoreFolder="D:\Program Files (x86)\Arduino\hardware\arduino\avr\cores\arduino" VariantFullPath="D:\Program Files (x86)\Arduino\hardware\arduino\avr\variants\mega" McuIdePath="D:\Program Files (x86)\Arduino" McuSketchBookPath="C:\Users\harou\Documents\Arduino" name="Arduino/Genuino Mega w/ ATmega2560 (Mega 2560)" vid.0="0x2341" pid.0="0x0010" vid.1="0x2341" pid.1="0x0042" vid.2="0x2A03" pid.2="0x0010" vid.3="0x2A03" pid.3="0x0042" vid.4="0x2341" pid.4="0x0210" vid.5="0x2341" pid.5="0x0242" upload.tool="avrdude" upload.maximum_data_size="8192" bootloader.tool="avrdude" bootloader.low_fuses="0xFF" bootloader.unlock_bits="0x3F" bootloader.lock_bits="0x0F" build.f_cpu="16000000L" build.core="arduino" build.variant="mega" build.board="AVR_MEGA2560" menu.cpu.atmega2560="ATmega2560 (Mega 2560)" menu.cpu.atmega2560.upload.protocol="wiring" menu.cpu.atmega2560.upload.maximum_size="253952" menu.cpu.atmega2560.upload.speed="115200" menu.cpu.atmega2560.bootloader.high_fuses="0xD8" menu.cpu.atmega2560.bootloader.extended_fuses="0xFD" menu.cpu.atmega2560.bootloader.file="stk500v2/stk500boot_v2_mega2560.hex" menu.cpu.atmega2560.build.mcu="atmega2560" menu.cpu.atmega2560.build.board="AVR_MEGA2560" menu.cpu.atmega1280="ATmega1280" menu.cpu.atmega1280.upload.protocol="arduino" menu.cpu.atmega1280.upload.maximum_size="126976" menu.cpu.atmega1280.upload.speed="57600" menu.cpu.atmega1280.bootloader.high_fuses="0xDA" menu.cpu.atmega1280.bootloader.extended_fuses="0xF5" menu.cpu.atmega1280.bootloader.file="atmega/ATmegaBOOT_168_atmega1280.hex" menu.cpu.atmega1280.build.mcu="atmega1280" menu.cpu.atmega1280.build.board="AVR_MEGA" runtime.ide.path="D:\Program Files (x86)\Arduino" runtime.os="windows" build.system.path="D:\Program Files (x86)\Arduino\hardware\arduino\avr\system" runtime.ide.version="10801" target_package="arduino" target_platform="avr" runtime.hardware.path="D:\Program Files (x86)\Arduino\hardware\arduino" originalid="mega" intellisense.tools.path="{runtime.tools.avr-gcc.path}\" intellisense.include.paths="{intellisense.tools.path}avr\include\;{intellisense.tools.path}avr\include\avr\;{intellisense.tools.path}lib\gcc\avr\4.8.1\include;{intellisense.tools.path}lib\gcc\avr\4.9.2\include;{intellisense.tools.path}lib\gcc\avr\4.9.3\include" tools.atprogram.cmd.path="%AVRSTUDIO_EXE_PATH%\atbackend\atprogram" tools.atprogram.cmd.setwinpath="true" tools.atprogram.program.params.verbose="-v" tools.atprogram.program.params.quiet="-q" tools.atprogram.program.pattern="&quot;{cmd.path}&quot; -d {build.mcu} {program.verbose} {program.extra_params} program -c -f &quot;{build.path}\{build.project_name}.hex&quot;" tools.atprogram.program.xpattern="&quot;{cmd.path}&quot; {AVRSTUDIO_BACKEND_CONNECTION} -d {build.mcu} {program.verbose} {program.extra_params} program -c -f &quot;{build.path}\{build.project_name}.hex&quot;" tools.atprogram.erase.params.verbose="-v" tools.atprogram.erase.params.quiet="-q" tools.atprogram.bootloader.params.verbose="-v" tools.atprogram.bootloader.params.quiet="-q" tools.atprogram.bootloader.pattern="&quot;{cmd.path}&quot; -d {build.mcu} {bootloader.verbose}  program -c -f &quot;{runtime.ide.path}\hardware\arduino\avr\bootloaders\{bootloader.file}&quot;" version="1.6.17" compiler.warning_flags="-w" compiler.warning_flags.none="-w" compiler.warning_flags.default="" compiler.warning_flags.more="-Wall" compiler.warning_flags.all="-Wall -Wextra" compiler.path="{runtime.tools.avr-gcc.path}/bin/" compiler.c.cmd="avr-gcc" compiler.c.flags="-c -g -Os {compiler.warning_flags} -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects" compiler.c.elf.flags="{compiler.warning_flags} -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections" compiler.c.elf.cmd="avr-gcc" compiler.S.flags="-c -g -x assembler-with-cpp -flto -MMD" compiler.cpp.cmd="avr-g++" compiler.cpp.flags="-c -g -Os {compiler.warning_flags} -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -MMD -flto" compiler.ar.cmd="avr-gcc-ar" compiler.ar.flags="rcs" compiler.objcopy.cmd="avr-objcopy" compiler.objcopy.eep.flags="-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0" compiler.elf2hex.flags="-O ihex -R .eeprom" compiler.elf2hex.cmd="avr-objcopy" compiler.ldflags="" compiler.size.cmd="avr-size" build.extra_flags="" compiler.c.extra_flags="" compiler.c.elf.extra_flags="" compiler.S.extra_flags="" compiler.cpp.extra_flags="" compiler.ar.extra_flags="" compiler.objcopy.eep.extra_flags="" compiler.elf2hex.extra_flags="" recipe.c.o.pattern="&quot;{compiler.path}{compiler.c.cmd}&quot; {compiler.c.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.c.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.cpp.o.pattern="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.S.o.pattern="&quot;{compiler.path}{compiler.c.cmd}&quot; {compiler.S.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.S.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" archive_file_path="{build.path}/{archive_file}" recipe.ar.pattern="&quot;{compiler.path}{compiler.ar.cmd}&quot; {compiler.ar.flags} {compiler.ar.extra_flags} &quot;{archive_file_path}&quot; &quot;{object_file}&quot;" recipe.c.combine.pattern="&quot;{compiler.path}{compiler.c.elf.cmd}&quot; {compiler.c.elf.flags} -mmcu={build.mcu} {compiler.c.elf.extra_flags} -o &quot;{build.path}/{build.project_name}.elf&quot; {object_files} &quot;{build.path}/{archive_file}&quot; &quot;-L{build.path}&quot; -lm" recipe.objcopy.eep.pattern="&quot;{compiler.path}{compiler.objcopy.cmd}&quot; {compiler.objcopy.eep.flags} {compiler.objcopy.eep.extra_flags} &quot;{build.path}/{build.project_name}.elf&quot; &quot;{build.path}/{build.project_name}.eep&quot;" recipe.objcopy.hex.pattern="&quot;{compiler.path}{compiler.elf2hex.cmd}&quot; {compiler.elf2hex.flags} {compiler.elf2hex.extra_flags} &quot;{build.path}/{build.project_name}.elf&quot; &quot;{build.path}/{build.project_name}.hex&quot;" recipe.output.tmp_file="{build.project_name}.hex" recipe.output.save_file="{build.project_name}.{build.variant}.hex" recipe.size.pattern="&quot;{compiler.path}{compiler.size.cmd}&quot; -A &quot;{build.path}/{build.project_name}.elf&quot;" recipe.size.regex="^(?:\.text|\.data|\.bootloader)\s+([0-9]+).*" recipe.size.regex.data="^(?:\.data|\.bss|\.noinit)\s+([0-9]+).*" recipe.size.regex.eeprom="^(?:\.eeprom)\s+([0-9]+).*" preproc.includes.flags="-w -x c++ -M -MG -MP" recipe.preproc.includes="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} {preproc.includes.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot;" preproc.macros.flags="-w -x c++ -E -CC" recipe.preproc.macros="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} {preproc.macros.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{preprocessed_file_path}&quot;" tools.avrdude.path="{runtime.tools.avrdude.path}" tools.avrdude.cmd.path="{path}/bin/avrdude" tools.avrdude.config.path="{path}/etc/avrdude.conf" tools.avrdude.network_cmd="{runtime.tools.arduinoOTA.path}/bin/arduinoOTA" tools.avrdude.upload.params.verbose="-v" tools.avrdude.upload.params.quiet="-q -q" tools.avrdude.upload.verify="" tools.avrdude.upload.params.noverify="-V" tools.avrdude.upload.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {upload.verbose} {upload.verify} -p{build.mcu} -c{upload.protocol} -P{serial.port} -b{upload.speed} -D &quot;-Uflash:w:{build.path}/{build.project_name}.hex:i&quot;" tools.avrdude.program.params.verbose="-v" tools.avrdude.program.params.quiet="-q -q" tools.avrdude.program.verify="" tools.avrdude.program.params.noverify="-V" tools.avrdude.program.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {program.verbose} {program.verify} -p{build.mcu} -c{protocol} {program.extra_params} &quot;-Uflash:w:{build.path}/{build.project_name}.hex:i&quot;" tools.avrdude.erase.params.verbose="-v" tools.avrdude.erase.params.quiet="-q -q" tools.avrdude.erase.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {erase.verbose} -p{build.mcu} -c{protocol} {program.extra_params} -e -Ulock:w:{bootloader.unlock_bits}:m -Uefuse:w:{bootloader.extended_fuses}:m -Uhfuse:w:{bootloader.high_fuses}:m -Ulfuse:w:{bootloader.low_fuses}:m" tools.avrdude.bootloader.params.verbose="-v" tools.avrdude.bootloader.params.quiet="-q -q" tools.avrdude.bootloader.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {bootloader.verbose} -p{build.mcu} -c{protocol} {program.extra_params} &quot;-Uflash:w:{runtime.platform.path}/bootloaders/{bootloader.file}:i&quot; -Ulock:w:{bootloader.lock_bits}:m" tools.avrdude_remote.upload.pattern="/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -p{build.mcu}" tools.avrdude.upload.network_pattern="&quot;{network_cmd}&quot; -address {serial.port} -port {upload.network.port} -sketch &quot;{build.path}/{build.project_name}.hex&quot; -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}" build.usb_manufacturer="&quot;Unknown&quot;" build.usb_flags="-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER={build.usb_manufacturer}' '-DUSB_PRODUCT={build.usb_product}'" vm.platform.root.path="C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\Extensions\cp2n5d4e.gpf\Micro Platforms\arduino16x" avrisp.name="AVR ISP" avrisp.communication="serial" avrisp.protocol="stk500v1" avrisp.program.protocol="stk500v1" avrisp.program.tool="avrdude" avrisp.program.extra_params="-P{serial.port}" avrispmkii.name="AVRISP mkII" avrispmkii.communication="usb" avrispmkii.protocol="stk500v2" avrispmkii.program.protocol="stk500v2" avrispmkii.program.tool="avrdude" avrispmkii.program.extra_params="-Pusb" usbtinyisp.name="USBtinyISP" usbtinyisp.protocol="usbtiny" usbtinyisp.program.tool="avrdude" usbtinyisp.program.extra_params="" arduinoisp.name="ArduinoISP" arduinoisp.protocol="arduinoisp" arduinoisp.program.tool="avrdude" arduinoisp.program.extra_params="" arduinoisporg.name="ArduinoISP.org" arduinoisporg.protocol="arduinoisporg" arduinoisporg.program.tool="avrdude" arduinoisporg.program.extra_params="" usbasp.name="USBasp" usbasp.communication="usb" usbasp.protocol="usbasp" usbasp.program.protocol="usbasp" usbasp.program.tool="avrdude" usbasp.program.extra_params="-Pusb" parallel.name="Parallel Programmer" parallel.protocol="dapa" parallel.force="true" parallel.program.tool="avrdude" parallel.program.extra_params="-F" arduinoasisp.name="Arduino as ISP" arduinoasisp.communication="serial" arduinoasisp.protocol="stk500v1" arduinoasisp.speed="19200" arduinoasisp.program.protocol="stk500v1" arduinoasisp.program.speed="19200" arduinoasisp.program.tool="avrdude" arduinoasisp.program.extra_params="-P{serial.port} -b{program.speed}" usbGemma.name="Arduino Gemma" usbGemma.protocol="arduinogemma" usbGemma.program.tool="avrdude" usbGemma.program.extra_params="" usbGemma.config.path="{runtime.platform.path}/bootloaders/gemma/avrdude.conf" stk500.name="Atmel STK500 development board" stk500.communication="serial" stk500.protocol="stk500" stk500.program.protocol="stk500" stk500.program.tool="avrdude" stk500.program.extra_params="-P{serial.port}" buspirate.name="BusPirate as ISP" buspirate.communication="serial" buspirate.protocol="buspirate" buspirate.program.protocol="buspirate" buspirate.program.tool="avrdude" buspirate.program.extra_params="-P{serial.port}" runtime.tools.avr-gcc.path="D:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.avr-gcc-4.9.2-atmel3.5.3-arduino2.path="D:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.tools-avr.path="D:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.avrdude.path="D:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.avrdude-6.3.0-arduino8.path="D:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.arduinoOTA.path="D:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.arduinoOTA-1.0.0.path="D:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.arm-none-eabi-gcc.path="C:\Users\harou\AppData\Local\arduino15\packages\arduino\tools\arm-none-eabi-gcc\4.8.3-2014q1" runtime.tools.arm-none-eabi-gcc-4.8.3-2014q1.path="C:\Users\harou\AppData\Local\arduino15\packages\arduino\tools\arm-none-eabi-gcc\4.8.3-2014q1" runtime.tools.bossac.path="C:\Users\harou\AppData\Local\arduino15\packages\arduino\tools\bossac\1.6.1-arduino" runtime.tools.bossac-1.6.1-arduino.path="C:\Users\harou\AppData\Local\arduino15\packages\arduino\tools\bossac\1.6.1-arduino" upload.protocol="wiring" upload.maximum_size="253952" upload.speed="115200" bootloader.high_fuses="0xD8" bootloader.extended_fuses="0xFD" bootloader.file="stk500v2/stk500boot_v2_mega2560.hex" build.mcu="atmega2560" runtime.vm.boardinfo.id="mega_atmega2560" runtime.vm.boardinfo.name="mega_atmega2560" runtime.vm.boardinfo.desc="Arduino/Genuino Mega w/ ATmega2560 (Mega 2560)" runtime.vm.boardinfo.src_location="D:\Program Files (x86)\Arduino\hardware\arduino\avr" ide.hint="Use installed IDE. Provides built-in hardware, reference/help and libraries." ide.location.key="Arduino16x" ide.location.ide.winreg="Arduino 1.6.x Application" ide.location.sketchbook.winreg="Arduino 1.6.x Sketchbook" ide.location.sketchbook.preferences="sketchbook.path" ide.default.revision_name="1.8.0" ide.default.version="10800" ide.default.package="arduino" ide.default.platform="avr" ide.multiplatform="true" ide.includes="arduino.h" ide.exe_name="arduino" ide.platformswithoutpackage="false" ide.includes.fallback="wprogram.h" ide.extension="ino" ide.extension.fallback="pde" ide.versionGTEQ="160" ide.exe="arduino.exe" ide.hosts="atmel" ide.url="http://arduino.cc/en/Main/Software" ide.help.reference.path="reference" ide.help.reference.path2="reference\www.arduino.cc\en\Reference" ide.help.reference.serial="reference\www.arduino.cc\en\Serial" vm.debug="true" software="ARDUINO" ssh.user.name="root" ssh.user.default.password="arduino" ssh.host.wwwfiles.path="/www/sd" build.working_directory="{runtime.ide.path}\java\bin" ide.location.preferences.portable="{runtime.ide.path}\portable" ide.location.preferences.arduinoData="{runtime.sketchbook.path}\ArduinoData" ide.location.preferences="%VM_APPDATA_LOCAL%\arduino15\preferences.txt" ide.location.preferences_fallback="%VM_APPDATA_ROAMING%\arduino15\preferences.txt" ide.location.contributions="%VM_APPDATA_LOCAL%\arduino15" ide.location.contributions_fallback="%VM_APPDATA_ROAMING%\arduino15" ide.contributions.boards.allow="true" ide.contributions.boards.ignore_unless_rewrite_found="true" ide.contributions.libraries.allow="true" ide.contributions.boards.support.urls.wiki="https://github.com/arduino/Arduino/wiki/Unofficial-list-of-3rd-party-boards-support-urls" ide.create_platforms_from_boardsTXT.teensy="build.core" ide.appid="arduino16x" location.sketchbook="C:\Users\harou\Documents\Arduino" build.core.vmresolved="D:\Program Files (x86)\Arduino\hardware\arduino\avr\cores\arduino" build.core.parentfolder.vmresolved="D:\Program Files (x86)\Arduino\hardware\arduino\avr\cores" build.core.coresparentfolder.vmresolved="D:\Program Files (x86)\Arduino\hardware\arduino\avr" build.core.path="D:\Program Files (x86)\Arduino\hardware\arduino\avr\cores\arduino" vm.core.include="arduino.h" vm.boardsource.path="D:\Program Files (x86)\Arduino\hardware\arduino\avr" runtime.platform.path="D:\Program Files (x86)\Arduino\hardware\arduino\avr" vm.platformname.name="avr" build.arch="AVR" builder.noino="false" build.architecture="avr" vmresolved.compiler.path="D:\Program Files (x86)\Arduino\hardware\tools\avr\bin\" vmresolved.tools.path="D:\Program Files (x86)\Arduino\hardware\tools\avr" build.variant.vmresolved="D:\Program Files (x86)\Arduino\hardware\arduino\avr\variants\mega" build.path="C:\Users\harou\AppData\Local\Temp\VMBuilds\ArduBarBotSlave\mega_atmega2560\Debug" build.project_name="ArduBarBotSlave.ino" build.project_path="C:\Users\harou\OneDrive\ExamensArbetet\Arduino\ArduBarBotSlave" ProjectDir="C:\Users\harou\OneDrive\ExamensArbetet\Arduino\ArduBarBotSlave\" vm.runtime.compiler.showwarnings="false" vm.runtime.upload.verbose="false" vm.runtime.upload.verify="false" serial.port.file="COM9" serial.port="COM9" serial.port.num="9" serial.port.caption="COM9   - USB-SERIAL CH340" serial.Caption="USB-SERIAL CH340 (COM9)" serial.ClassGuid="{4d36e978-e325-11ce-bfc1-08002be10318}" serial.CompatibleID.value0="USB\Class_FF" serial.ConfigManagerErrorCode="0" serial.ConfigManagerUserConfig="False" serial.CreationClassName="Win32_PnPEntity" serial.Description="USB-SERIAL CH340" serial.DeviceID="USB\VID_1A86&amp;PID_7523\8&amp;E605270&amp;0&amp;3" serial.HardwareID.value0="USB\VID_1A86&amp;PID_7523" serial.Manufacturer="wch.cn" serial.Name="USB-SERIAL CH340 (COM9)" serial.PNPClass="Ports" serial.PNPDeviceID="USB\VID_1A86&amp;PID_7523\8&amp;E605270&amp;0&amp;3" serial.Present="True" serial.Service="CH341SER_A64" serial.Status="OK" serial.SystemCreationClassName="Win32_ComputerSystem" serial.SystemName="HYPERDRIVECLIEN" serial.vid="0x1A86" serial.pid="0x7523" serial.iserial="8&amp;E605270&amp;0&amp;3" serial.port.iserial="8&amp;E605270&amp;0&amp;3" vm.runtime.compiler.auto_discover_includes="true" vm.runtime.compiler.auto_discover_includes_cache="true" build.vm.build.vmdebug="1" build.vm.build.isgdb="0" build.vm.build.optimised="1" vm.last.buildpath="C:\Users\harou\AppData\Local\Temp\VMBuilds\ArduBarBotSlave\mega_atmega2560\Debug" />
    </Platform>
    <Debug EnableBreak="1" DebugEnabled="1" DebugMode="Full" LocalPortSpeed="115200" RemotePortSpeed="115200" InBreakLiveView="1" PerfStats="1" IsGdb="0" RemotePortSpeedWrittenToDebugSource="115200" />
    <VCCodeModel>
      <VCCodeMacros />
    </VCCodeModel>
    <BreakPoints>
      <BreakPoint Index="1" Name="ArduBarBotSlave.ino, line 91" Id="2b76a879-ad4f-4b3c-af99-ff5a8a294b06" Enabled="0" Message="  Millis is currently {millis()}.&#xD;&#xA;    This tutorial debug trace point prints a message every 250ms&#xD;&#xA;    The break point property called 'Continue Execution' controls if code should pause here and wait for you to click 'Continue'.&#xD;&#xA;    To stop debug, click stop debugging or close/stop the serial monitor.&#xD;&#xA;    When debug ends, serial debug will continue to break/pause the mcu or transmit trace message, wifi debug will not.&#xD;&#xA;    This breakpoint exists at the start of the loop() function, where you see a red dot.&#xD;&#xA;    The red dot is a ‘breakpoint’. Edit the properties of a breakpoint by right clicking it or open the 'Debug&gt;Other Windows&gt;Breakpoint List'&#xD;&#xA;    This breakpoint is automatically set by Visual Micro to demonstrate the Arduino debugger.&#xD;&#xA;    Add your own breakpoints by placing the cursor on any code line and pressing F9. Press F9 again to delete the breakpoint.&#xD;&#xA;    Read more about the Visual Micro debugger at http://www.visualmicro.com/page/Debugging-for-Arduino.aspx&#xD;&#xA;    Take some time to learn about debugging, it’s worth it!&#xD;&#xA;    To switch the demo breakpoint and other tips off, deselect Visual Micro&gt;Tutorial Mode.&#xD;&#xA;    Switch debugging off by changing from tool bar (Configuratin) from 'Debug' to 'Release'" MessageTextType="0" PreProcessedMessage="  Millis is currently {0}.&#xD;&#xA;    This tutorial debug trace point prints a message every 250ms&#xD;&#xA;    The break point property called 'Continue Execution' controls if code should pause here and wait for you to click 'Continue'.&#xD;&#xA;    To stop debug, click stop debugging or close/stop the serial monitor.&#xD;&#xA;    When debug ends, serial debug will continue to break/pause the mcu or transmit trace message, wifi debug will not.&#xD;&#xA;    This breakpoint exists at the start of the loop() function, where you see a red dot.&#xD;&#xA;    The red dot is a ‘breakpoint’. Edit the properties of a breakpoint by right clicking it or open the 'Debug&gt;Other Windows&gt;Breakpoint List'&#xD;&#xA;    This breakpoint is automatically set by Visual Micro to demonstrate the Arduino debugger.&#xD;&#xA;    Add your own breakpoints by placing the cursor on any code line and pressing F9. Press F9 again to delete the breakpoint.&#xD;&#xA;    Read more about the Visual Micro debugger at http://www.visualmicro.com/page/Debugging-for-Arduino.aspx&#xD;&#xA;    Take some time to learn about debugging, it’s worth it!&#xD;&#xA;    To switch the demo breakpoint and other tips off, deselect Visual Micro&gt;Tutorial Mode.&#xD;&#xA;    Switch debugging off by changing from tool bar (Configuratin) from 'Debug' to 'Release'" Condition="millis()&gt;0 || millis()&gt;1" ConditionType="1" CurrentHits="0" File="c:\users\harou\onedrive\examensarbetet\arduino\ardubarbotslave\ardubarbotslave.ino" FileLine="91" FileColumn="1" FunctionName="" FunctionLineOffset="1" FunctionColumnOffset="1" HitCountTarget="250" HitCountType="4" Language="C++" LocationType="3" Tag="&lt;vmbp Id='2b76a879-ad4f-4b3c-af99-ff5a8a294b06'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>84		{
85			Serial.print(barBotContainer[i].GetName());
86			Serial.print("  ");
87			Serial.println(barBotContainer[i].GetAmount());
88		} 
89	}
90	
--&gt;91	void loop()
92	{
93		//neoPixelHandler.NeoPixelRainBow(200);
94	
95		/*Serial.println("Got a cocktail command");
96		ValidateDrinkOrder();*/
97	
98		if (Serial1.available() &amp;&amp; (millis() - timerTimeOut &gt; 650UL))
99		{
100			int msg = Serial1.read();
</Source>
        <MessageVariables>
          <MessageVariable Name="millis()" Index="1" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="2" Name="Communication.cpp, line 32" Id="592f93e9-ca7a-42f8-a6f4-a7b69f8356df" Enabled="0" Message="{&quot;Command sent&quot;}" MessageTextType="2" PreProcessedMessage="{0}" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\harou\onedrive\examensarbetet\arduino\ardubarbotslave\communication.cpp" FileLine="32" FileColumn="1" FunctionName="SendIngridients(Container containers[6])" FunctionLineOffset="13" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='592f93e9-ca7a-42f8-a6f4-a7b69f8356df'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>25			//Send index number
26			String sendMessage = splitCharIndex;
27			sendMessage += String(i + 1);
28			sendMessage += splitCharName;
29			sendMessage += containers[i].GetName();
30			sendMessage += splitCharAmount;
31			sendMessage += containers[i].GetAmount();
--&gt;32			sendMessage += splitEnd;
33	
34			short counter = 0;
35			do
36			{
37				if (counter &lt; 2)
38				{
39					Serial1.print(sendMessage);
40					Serial.print("\n\nSent:   ");
41					Serial.println(sendMessage);
</Source>
        <MessageVariables>
          <MessageVariable Name="&quot;Command sent&quot;" Index="1" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="3" Name="Communication.cpp, line 42" Id="09eaf1ac-a64a-4870-9f27-3799eda27aaa" Enabled="0" Message="{&quot;Command Sending&quot;}" MessageTextType="2" PreProcessedMessage="{0}" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\harou\onedrive\examensarbetet\arduino\ardubarbotslave\communication.cpp" FileLine="42" FileColumn="1" FunctionName="SendIngridients(Container containers[6])" FunctionLineOffset="23" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='09eaf1ac-a64a-4870-9f27-3799eda27aaa'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>35			do
36			{
37				if (counter &lt; 2)
38				{
39					Serial1.print(sendMessage);
40					Serial.print("\n\nSent:   ");
41					Serial.println(sendMessage);
--&gt;42					counter++;
43				}
44	
45				if (millis() - timeOutTimer &gt; 5000UL)
46				{
47					return;
48				}
49	
50			} while (!ReadIncomingMessage_Compare(sendMessage));
51	
</Source>
        <MessageVariables>
          <MessageVariable Name="&quot;Command Sending&quot;" Index="1" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="4" Name="ArduBarBotSlave.ino, line 60" Id="59be97de-0d5d-4824-99fd-da8e6f295d2e" Enabled="0" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\harou\onedrive\examensarbetet\arduino\ardubarbotslave\ardubarbotslave.ino" FileLine="60" FileColumn="1" FunctionName="setup()" FunctionLineOffset="6" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='59be97de-0d5d-4824-99fd-da8e6f295d2e'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>53	#pragma endregion
54	
55	void setup()
56	{
57	
58		pinMode(airPump, OUTPUT);
59		pinMode(motor, OUTPUT);
--&gt;60		pinMode(bottle1, OUTPUT);
61		pinMode(bottle2, OUTPUT);
62		pinMode(bottle3, OUTPUT);
63		pinMode(bottle4, OUTPUT);
64		pinMode(bottle5, OUTPUT);
65		pinMode(bottle6, OUTPUT);
66		pinMode(SD_SPI, OUTPUT);
67	
68		Serial.begin(115200);
69		Serial1.begin(230400);
</Source>
      </BreakPoint>
      <BreakPoint Index="5" Name="DrinkMixer.cpp, line 104" Id="8f4fd9a5-3fc9-4279-9b48-f016e27854c4" Enabled="0" Message="{_airPump}{_motor}{_bottle1}{_bottle2}{_bottle3}{_bottle4}{_bottle5}{_bottle6}{soleniod[0]}{soleniod[1]} {soleniod[2]}{soleniod[3]}{soleniod[4]}" MessageTextType="2" PreProcessedMessage="{0}{1}{2}{3}{4}{5}{6}{7}{8}{9} {10}{11}{12}" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\harou\onedrive\examensarbetet\arduino\ardubarbotslave\drinkmixer.cpp" FileLine="104" FileColumn="1" FunctionName="init(int tmpairPump, int tmpmotor, int tmpbottle1, int tmpbottle2, int tmpbottle3, int tmpbottle4, int tmpbottle5, int tmpbottle6)" FunctionLineOffset="19" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='8f4fd9a5-3fc9-4279-9b48-f016e27854c4'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>97		soleniod[0] = _airPump;
98		soleniod[1] = _motor;
99		soleniod[2] = _bottle1;
100		soleniod[3] = _bottle2;
101		soleniod[4] = _bottle3;
102		soleniod[5] = _bottle4;
103		soleniod[6] = _bottle5;
--&gt;104		soleniod[7] = _bottle6;
105	
106		
107	
108	
109		Serial.println("Init, solenoid pos: ");
110		for (size_t i = 0; i &lt; 8; i++)
111		{
112			Serial.print(soleniod[i]);
113			Serial.print("  ");
</Source>
        <MessageVariables>
          <MessageVariable Name="_airPump" Index="1" />
          <MessageVariable Name="_motor" Index="2" />
          <MessageVariable Name="_bottle1" Index="3" />
          <MessageVariable Name="_bottle2" Index="4" />
          <MessageVariable Name="_bottle3" Index="5" />
          <MessageVariable Name="_bottle4" Index="6" />
          <MessageVariable Name="_bottle5" Index="7" />
          <MessageVariable Name="_bottle6" Index="8" />
          <MessageVariable Name="soleniod[0]" Index="9" />
          <MessageVariable Name="soleniod[1]" Index="10" />
          <MessageVariable Name="soleniod[2]" Index="11" />
          <MessageVariable Name="soleniod[3]" Index="12" />
          <MessageVariable Name="soleniod[4]" Index="13" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="6" Name="DrinkMixer.cpp, line 108" Id="78367d4f-d783-4979-a70c-8046ec0b8a09" Enabled="0" Message="{soleniod[0]}{soleniod[1]} {soleniod[2]}{soleniod[3]}{soleniod[4]}" MessageTextType="2" PreProcessedMessage="{0}{1} {2}{3}{4}" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\harou\onedrive\examensarbetet\arduino\ardubarbotslave\drinkmixer.cpp" FileLine="108" FileColumn="1" FunctionName="init(int tmpairPump, int tmpmotor, int tmpbottle1, int tmpbottle2, int tmpbottle3, int tmpbottle4, int tmpbottle5, int tmpbottle6)" FunctionLineOffset="23" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='78367d4f-d783-4979-a70c-8046ec0b8a09'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>101		soleniod[4] = _bottle3;
102		soleniod[5] = _bottle4;
103		soleniod[6] = _bottle5;
104		soleniod[7] = _bottle6;
105	
106		
107	
--&gt;108	
109		Serial.println("Init, solenoid pos: ");
110		for (size_t i = 0; i &lt; 8; i++)
111		{
112			Serial.print(soleniod[i]);
113			Serial.print("  ");
114		}
115		Serial.println();
116	}
117	
</Source>
        <MessageVariables>
          <MessageVariable Name="soleniod[0]" Index="1" />
          <MessageVariable Name="soleniod[1]" Index="2" />
          <MessageVariable Name="soleniod[2]" Index="3" />
          <MessageVariable Name="soleniod[3]" Index="4" />
          <MessageVariable Name="soleniod[4]" Index="5" />
        </MessageVariables>
      </BreakPoint>
    </BreakPoints>
  </Program>
</VisualMicro>